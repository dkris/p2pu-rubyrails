---
layout: default
title: Sign Up Task
---
h1. Sign Up Task

*NOTE:* If you get stuck at any point, join the IRC chatroom at "irc.freenode.net/#p2pu-rubyrails":irc://irc.freenode.net#p2pu-rubyrails or post in the "forums":http://p2pu.org/node/13622/forums.

h2. Installing Ruby

h3. Windows

Install Ruby *1.9.2* using the installer available on the "RubyInstaller Downloads Page":http://rubyinstaller.org/downloads/

Install *"PuTTY":http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html* using the Windows installer.

Proceed to the next step below.

h3. Mac

Ruby and RubyGems are already preinstalled on recent Mac OS versions.  The versions that come preinstalled are not recommended for use in development, but since the course will use a virtual machine (described later), they will suffice.

Proceed to the next step below.

h3. Linux

Using your distribution's package manager, install *git* and *curl*.  For instance, on Ubuntu, run the following at the command line:

{% highlight bash %}
apt-get install git curl
{% endhighlight %}

*DO NOT* install Ruby or Rails using your distribution's package manager.

After installing git and curl, run the following the command to install *rvm*, Ruby Version Manager:

{% highlight bash %}
bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-head )
{% endhighlight %}

Add the following line to your *~/.bashrc* file (or your other shell-specific profile file):

{% highlight bash %}
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
{% endhighlight %}

Run the following command and execute the commands listed under "For Ruby (MRI & ree) you should install the following OS dependencies:"

{% highlight bash %}
rvm notes
{% endhighlight %}

For instance, on Ubuntu Linux, run the following command:

{% highlight bash %}
aptitude install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev autoconf
{% endhighlight %}

With all of the dependencies satisfied, run the following command to install Ruby:

{% highlight bash %}
rvm install 1.9.2
{% endhighlight %}

Finally, make that version of Ruby the default:

{% highlight bash %}
rvm use --default 1.9.2
{% endhighlight %}

h2. Installing VirtualBox

To make sure everyone uses the same environment, this course will use a Linux virtual machine preconfigured with a Ruby on Rails environment.

Install VirtualBox *3.2*, available on the "VirtualBox download page":http://www.virtualbox.org/wiki/Download_Old_Builds_3_2.  Download the correct version for your operating system.

VirtualBox is freely available under the "VirtualBox Personal Use and Evaluation License":http://www.virtualbox.org/wiki/VirtualBox_PUEL.

h2. Installing the Rails Environment

Open a command line and run the following command to install *Vagrant*:

{% highlight bash %}
gem install vagrant -v 0.6.9
{% endhighlight %}

Download the *"Engine Yard University's Vagrant environment":http://s3.amazonaws.com/EY5/vagrant.zip* and unzip it.

Change directory to the folder where you unzipped *vagrant.zip*:

{% highlight bash %}
cd /path/to/unzipped/file
{% endhighlight %}

Load the virtual machine:

{% highlight bash %}
vagrant box add eyu package.box
{% endhighlight %}

*Windows Users:* If at any point you receive an error when using vagrant, you may need to follow the directions "in this email":http://groups.google.com/group/vagrant-up/msg/2328acdd86577fd9 to reinstall the JSON gem.  Thanks Tyler Cipriani for the tip!

Start the virtual machine:

{% highlight bash %}
vagrant up
{% endhighlight %}

Login to the virtual machine:

{% highlight bash %}
vagrant ssh
{% endhighlight %}

*Windows Users:* The _vagrant ssh_ command will cause an error.  To interact with the virtual machine, you need to use *PuTTY* (installed earlier).  Please follow the "Vagrant SSH on Windows instructions":http://vagrantup.com/docs/getting-started/setup/windows.html#ssh to setup and use PuTTY.  Go through the final step and click "Open" to connect to the virtual environment.

_*TASK:* So I can verify that you correctly setup the environment, run the following command and send the output, along with your to P2PU username, to <a href="mailto:&#112;&#050;&#112;&#117;&#064;&#097;&#110;&#100;&#121;&#108;&#105;&#110;&#100;&#101;&#109;&#097;&#110;&#046;&#099;&#111;&#109;">&#112;&#050;&#112;&#117;&#064;&#097;&#110;&#100;&#121;&#108;&#105;&#110;&#100;&#101;&#109;&#097;&#110;&#046;&#099;&#111;&#109;</a>_.

{% highlight bash %}
hostname
{% endhighlight %}

_*TASK:* Also in your email, include a program in your language of choice that accepts a sentence and reverses the words.  For example: given "I like dogs" the program should output "dogs like I"_.

After you have completed that task, you have successfully setup the environment that the course will use throughout.

To teardown, run the following command:

{% highlight bash %}
exit
{% endhighlight %}

Return to your regular machine's command prompt and type:

{% highlight bash %}
vagrant destroy
{% endhighlight %}
